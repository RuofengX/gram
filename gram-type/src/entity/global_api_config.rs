//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.15

use crate::ApiConfig;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "global_api_config")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub updated_at: DateTimeWithTimeZone,
    #[sea_orm(column_type = "JsonBinary")]
    pub api_config: ApiConfig,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::user_scraper::Entity")]
    UserScraper,
}

impl Related<super::user_scraper::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserScraper.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
