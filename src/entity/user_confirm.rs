//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_confirm")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub updated_at: DateTimeWithTimeZone,
    pub account: Uuid,
    #[sea_orm(column_type = "Text", nullable)]
    pub login_hash: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub confirm_code: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::user_account::Entity",
        from = "Column::Account",
        to = "super::user_account::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    UserAccount,
    #[sea_orm(has_many = "super::user_scraper::Entity")]
    UserScraper,
}

impl Related<super::user_account::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserAccount.def()
    }
}

impl Related<super::user_scraper::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserScraper.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
