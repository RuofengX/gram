//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.16

use crate::types::{ChannelFull, UserFull};
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "peer_full")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub updated_at: DateTimeWithTimeZone,
    pub user_id: i64,
    #[sea_orm(column_type = "Text", nullable)]
    pub username: Option<String>,
    #[sea_orm(column_type = "JsonBinary", nullable)]
    pub user_full: Option<UserFull>,
    #[sea_orm(column_type = "JsonBinary", nullable)]
    pub channel_full: Option<ChannelFull>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
